/// \file defines.h
/// \brief Essential defines.

#pragma once

#include <d3d11_2.h>
#include <dxgi1_3.h>
#include <DirectXMath.h>

#include "SimpleMath.h"
#include "tinyxml2.h"

using namespace DirectX;
using namespace SimpleMath;
using namespace tinyxml2;
using namespace std;

/// Safe release of a pointer to a Windows COM object. If
/// the pointer is not null, then release what it is pointing
/// to and set it to null.

//Beware the extra parentheses in this #define. They are there
//for a reason. 

#define SAFE_RELEASE(p) if(p){(p)->Release(); (p) = nullptr;}

/// Safe delete of a pointer. Note that it is OK to delete a null
/// pointer. Note the brackets and braces.

#define SAFE_DELETE(p) {delete (p); (p) = nullptr;}


/// \brief Billboard vertex structure. 
///
/// Custom vertex format for representing a vanilla billboard object. Consists 
/// of position, and texture coordinates.

struct BILLBOARDVERTEX{ 
  Vector3 p; ///< Position.
  float tu; ///< Texture U coordinate.
  float tv; ///< Texture V coordinate.
}; //BILLBOARDVERTEX

/// Constant buffer for use by shaders.

struct ConstantBuffer{
  XMFLOAT4X4 wvp; ///< World View Projection matrix
  float u0, u1, v0, v1;
}; //ConstantBuffer

/// Game object types.
/// Types of game object that can appear in the game. Note: NUM_OBJECT_TYPES 
/// must be last.

enum ObjectType{
  CROW_OBJECT, LOGO_OBJECT, GAMEOVER_OBJECT, BOSSBULLSCREEN_OBJECT, BOSSBULLWINSCREEN_OBJECT,
  //Luis-Gator Objects
  GATOR_OBJECT, GATORLEFT_OBJECT, GATORWALKLEFT_OBJECT, GATORWALKRIGHT_OBJECT, GATORCHEER_OBJECT, 
  GATORCHEERLEFT_OBJECT, GATORHURT_OBJECT, GATORHURTLEFT_OBJECT, STAR_OBJECT,
  //Misc Objects
  BULLET_OBJECT, HORSEATTACK_OBJECT, BOSSBULLATTACKLEFT_OBJECT, BOSSBULLATTACKRIGHT_OBJECT,
  EXPLODINGCROW_OBJECT, DEADCROW_OBJECT, MARKER_OBJECT, MONEYBAG_OBJECT,
  //Alfredo- Gorilla Object
  GORILLA_OBJECT, GORILLADOWNEDLEFT_OBJECT, GORILLADOWNEDRIGHT_OBJECT, DEAD_GORILLA_OBJECT, 
  MADGORILLALEFT_OBJECT, MADGORILLARIGHT_OBJECT, GORILLAATTACKLEFT_OBJECT, GORILLAATTACKRIGHT_OBJECT, 
  GORILLAWALKLEFT_OBJECT, GORILLAWALKRIGHT_OBJECT, GORILLABLOCKLEFT_OBJECT, GORILLABLOCKRIGHT_OBJECT, 
  //Alfredo- Champion Gorilla Object
  CHAMPIONGORILLA_OBJECT, CHAMPIONGORILLADOWNEDLEFT_OBJECT, CHAMPIONGORILLADOWNEDRIGHT_OBJECT, CHAMPIONDEAD_GORILLA_OBJECT,
  CHAMPIONMADGORILLALEFT_OBJECT, CHAMPIONMADGORILLARIGHT_OBJECT, CHAMPIONGORILLAATTACKLEFT_OBJECT, CHAMPIONGORILLAATTACKRIGHT_OBJECT,
  CHAMPIONGORILLAWALKLEFT_OBJECT, CHAMPIONGORILLAWALKRIGHT_OBJECT, CHAMPIONGORILLABLOCKLEFT_OBJECT, CHAMPIONGORILLABLOCKRIGHT_OBJECT,
  //Alfedo- Dog Objects
  DOG_OBJECT, DOGWALKLEFT_OBJECT, DOGWALKRIGHT_OBJECT, DOGATTACKLEFT_OBJECT, DOGATTACKRIGHT_OBJECT,
  DOGDOWNEDLEFT_OBJECT, DOGDOWNEDRIGHT_OBJECT, DOGDEAD_OBJECT, DOGMADLEFT_OBJECT, DOGMADRIGHT_OBJECT, 
  //Alfedo- Champion Dog Objects
  CHAMPIONDOG_OBJECT, CHAMPIONDOGWALKLEFT_OBJECT, CHAMPIONDOGWALKRIGHT_OBJECT, CHAMPIONDOGATTACKLEFT_OBJECT, CHAMPIONDOGATTACKRIGHT_OBJECT,
  CHAMPIONDOGDOWNEDLEFT_OBJECT, CHAMPIONDOGDOWNEDRIGHT_OBJECT, CHAMPIONDOGDEAD_OBJECT, CHAMPIONDOGMADLEFT_OBJECT, CHAMPIONDOGMADRIGHT_OBJECT,
  //Alfredo- Horse Objects
  HORSE_OBJECT, HORSEWALKLEFT_OBJECT, HORSEWALKRIGHT_OBJECT, HORSEMADLEFT_OBJECT, HORSEMADRIGHT_OBJECT, HORSEDEAD_OBJECT, 
  HORSERUNLEFT_OBJECT, HORSERUNRIGHT_OBJECT, HORSESTOPLEFT_OBJECT, HORSESTOPRIGHT_OBJECT, 
  //Alfredo- Rhino Objects
  RHINO_OBJECT, RHINOATTACKLEFT_OBEJCT, RHINOATTACKRIGHT_OBJECT, RHINODOWNEDLEFT_OBJECT, RHINODOWNEDRIGHT_OBJECT, RHINOHURTLEFT_OBJECT,
  RHINOHURTRIGHT_OBJECT, RHINORUNLEFT_OBJECT, RHINORUNRIGHT_OBJECT, RHINODEAD_OBJECT,
  //Alfredo - Boss Bull Objects
  BOSSBULL_OBJECT, BOSSBULLLEFT_OBJECT, BOSSBULLCHARGELEFT_OBJECT, BOSSBULLCHARGERIGHT_OBJECT,
  BOSSBULLHURTLEFT_OBJECT, BOSSBULLHURTRIGHT_OBJECT, BOSSBULLDOWNEDLEFT_OBJECT, BOSSBULLDOWNEDRIGHT_OBJECT, 
  BOSSBULLDEADLEFT_OBJECT, BOSSBULLDEADRIGHT_OBJECT,
  //Alfredo - Furniture Objects
  WATERCOOLER_OBJECT, POTTEDPLANT_OBJECT, VENDINGMACHINE_OBJECT, DESKHORIZONTAL_OBJECT, 
  //Alfredo - Furniture Explosion Objects
  DESKEXPLOSION_OBJECT, WATERCOOLEREXPLOSION_OBJECT, POTTEDPLANTEXPLOSION_OBJECT,
  //Alfredo - PowerUp Objects
  HEALTHSODA_OBJECT, STRENGTHSODA_OBJECT,
  //Luis-RLG Tiles
  CARPET_OBJECT, WINDOW_OBJECT, ENDWALL_OBJECT, ELEVATOR_OBJECT, ELEVATORIN_OBJECT, ELEVATOREN_OBJECT, ELEVATORWALL_OBJECT, DESKPRINT_OBJECT, OUTLET_OBJECT,
  DOGPOST_OBJECT, CATPOST_OBJECT, HORSEPOST_OBJECT, RHINOPOST_OBJECT,
  BKRMA_OBJECT, PLANTPOST_OBJECT, WOODWALL_OBJECT,  RINGFLOOR_OBJECT,
  GDCARPET_OBJECT, GDWINDOW_OBJECT, GDOUTLET_OBJECT, GDPLANTPOST_OBJECT, VOID_OBJECT, WIDEVOID_OBJECT, ROOF_OBJECT,
  DUMMYWALL_OBJECT, BLOCK_OBJECT,
  //Luis-HUD Objects
  HUD_OBJECT,
  //Luis & Alfredo-Attack Objects
  PUNCH_OBJECT, PUNCHLEFT_OBJECT, PUNCHANIMATIONLEFT_OBJECT, PUNCHANIMATIONRIGHT_OBJECT, 
  PUNCHANIMATIONFIRELEFT_OBJECT, PUNCHANIMATIONFIRERIGHT_OBJECT,

  NUM_OBJECT_TYPES //MUST be the last one
}; //ObjectType

//Luis-This Enumerated Type will keep track of the game states
enum GameState {
  STARTSCREEN_STATE, PLAYING_STATE, PAUSE_STATE, GAMEOVER_STATE, BOSSROOMSCREEN_STATE, BOSSBEATENSCREEN_STATE
};//Game State